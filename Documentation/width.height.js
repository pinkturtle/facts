// Generated by CoffeeScript 1.8.0
(function() {
  var constructPlaceholderImage, loadImage, query, replacePlaceholderWhenSourceHasLoaded;

  document.addEventListener("DOMContentLoaded", function() {
    query("img[width][height]:not([src])").forEach(function(img) {
      return constructPlaceholderImage(img, "src");
    });
    return query("video[width][height]:not([poster])").forEach(function(video) {
      return constructPlaceholderImage(video, "poster");
    });
  });

  window.addEventListener("load", function() {
    query("img[data-src]").forEach(function(img) {
      return replacePlaceholderWhenSourceHasLoaded(img, "data-src", "src");
    });
    return query("video[data-poster]").forEach(function(video) {
      return replacePlaceholderWhenSourceHasLoaded(video, "data-poster", "poster");
    });
  });

  constructPlaceholderImage = function(element, attribute) {
    var canvas;
    canvas = document.createElement("canvas");
    canvas.width = element.getAttribute("width");
    canvas.height = element.getAttribute("height");
    element.removeAttribute("width");
    element.removeAttribute("height");
    return element[attribute] = canvas.toDataURL();
  };

  replacePlaceholderWhenSourceHasLoaded = function(element, source, destination) {
    return loadImage(element.getAttribute(source), function(address) {
      element[destination] = address;
      return element.classList.add("loaded");
    });
  };

  loadImage = function(address, callback) {
    var img;
    img = document.createElement("img");
    img.onload = function() {
      return callback(address);
    };
    return img.src = address;
  };

  query = function(selector) {
    return Array.from(document.querySelectorAll(selector));
  };

}).call(this);
